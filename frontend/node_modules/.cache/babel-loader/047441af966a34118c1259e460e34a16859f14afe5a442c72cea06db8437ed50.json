{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\biabk\\\\FINAL-FAKE-NEWS-CHECKER\\\\CrippleFN\\\\frontend\\\\src\\\\pages\\\\VerificationPage.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport './VerificationPage.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst VerificationPage = () => {\n  _s();\n  const navigate = useNavigate();\n  const [activeTab, setActiveTab] = useState('text');\n  const [isLoading, setIsLoading] = useState(false);\n  const [error, setError] = useState('');\n\n  // States for the different forms\n  const [textInput, setTextInput] = useState('');\n  const [urlInput, setUrlInput] = useState('');\n  const [files, setFiles] = useState([]);\n\n  // User authentication check\n  useEffect(() => {\n    const user = localStorage.getItem('cripplefn_user');\n    if (!user) {\n      // Redirect to login if not authenticated\n      navigate('/login', {\n        state: {\n          from: '/verify',\n          message: \"You must be logged in to verify content.\"\n        }\n      });\n    }\n  }, [navigate]);\n  const handleSubmit = async e => {\n    e.preventDefault();\n    setError('');\n\n    // Check if data is entered\n    if (activeTab === 'text' && !textInput.trim()) {\n      setError('Please enter text to verify.');\n      return;\n    }\n    if (activeTab === 'url' && !urlInput.trim()) {\n      setError('Please enter a URL to verify.');\n      return;\n    }\n    if (activeTab === 'file' && files.length === 0) {\n      setError('Please select at least one file to verify.');\n      return;\n    }\n    setIsLoading(true);\n    try {\n      // Prepare data to send\n      const formData = new FormData();\n      let newNews = null;\n      const now = new Date();\n      const dateStr = now.toLocaleDateString('en-US');\n      if (activeTab === 'text') {\n        formData.append('text', textInput);\n        newNews = {\n          id: 'n_' + Math.random().toString(36).substr(2, 9),\n          title: textInput.slice(0, 60) + (textInput.length > 60 ? '...' : ''),\n          description: textInput,\n          date: dateStr,\n          status: 'pending',\n          link: '',\n          imageUrl: '/assets/fake-news-example.jpg',\n          sources: []\n        };\n      } else if (activeTab === 'url') {\n        formData.append('urls', urlInput);\n        newNews = {\n          id: 'n_' + Math.random().toString(36).substr(2, 9),\n          title: urlInput,\n          description: urlInput,\n          date: dateStr,\n          status: 'pending',\n          link: urlInput,\n          imageUrl: '/assets/fake-news-example.jpg',\n          sources: []\n        };\n      } else if (activeTab === 'file') {\n        var _files$;\n        for (let i = 0; i < files.length; i++) {\n          formData.append('files', files[i]);\n        }\n        newNews = {\n          id: 'n_' + Math.random().toString(36).substr(2, 9),\n          title: ((_files$ = files[0]) === null || _files$ === void 0 ? void 0 : _files$.name) || 'File',\n          description: files.map(f => f.name).join(', '),\n          date: dateStr,\n          status: 'pending',\n          link: '',\n          imageUrl: '/assets/fake-news-example.jpg',\n          sources: []\n        };\n      }\n      // Add to localStorage (pendingNews)\n      if (newNews) {\n        const pending = JSON.parse(window.localStorage.getItem('pendingNews') || '[]');\n        pending.push(newNews);\n        window.localStorage.setItem('pendingNews', JSON.stringify(pending));\n      }\n\n      // Simulate API call (replace with real call)\n      setTimeout(() => {\n        // Simulate a response with a verification ID\n        const verificationId = 'ver_' + Math.random().toString(36).substr(2, 9);\n        // Redirect to dashboard to process the news\n        navigate(`/dashboard`);\n        setIsLoading(false);\n      }, 2000);\n      // Real API call (uncomment to use)\n      /*\r\n      const response = await fetch('http://localhost:8000/verification', {\r\n        method: 'POST',\r\n        body: formData,\r\n      });\r\n      if (!response.ok) {\r\n        throw new Error('Error submitting verification');\r\n      }\r\n      const data = await response.json();\r\n      navigate(`/results/${data.id}`);\r\n      */\n    } catch (err) {\n      setError(err.message || 'An error occurred. Please try again.');\n      setIsLoading(false);\n    }\n  };\n  const handleFileChange = e => {\n    setFiles(Array.from(e.target.files));\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"verification-page\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"verification-container\",\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          children: \"Verify Content\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 133,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"verification-description\",\n          children: \"Submit text, a URL, or a file to verify its authenticity and detect possible manipulations.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 134,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"verification-tabs\",\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            className: `tab ${activeTab === 'text' ? 'active' : ''}`,\n            onClick: () => setActiveTab('text'),\n            children: \"Text\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 139,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: `tab ${activeTab === 'url' ? 'active' : ''}`,\n            onClick: () => setActiveTab('url'),\n            children: \"URL\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 145,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: `tab ${activeTab === 'file' ? 'active' : ''}`,\n            onClick: () => setActiveTab('file'),\n            children: \"File\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 151,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 138,\n          columnNumber: 11\n        }, this), error && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"alert alert-error\",\n          children: error\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 160,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n          onSubmit: handleSubmit,\n          children: [activeTab === 'text' && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"form-group\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: \"text-input\",\n              children: \"Text to verify\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 168,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n              id: \"text-input\",\n              value: textInput,\n              onChange: e => setTextInput(e.target.value),\n              placeholder: \"Paste here the text you want to verify...\",\n              rows: 10,\n              required: true\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 169,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 167,\n            columnNumber: 15\n          }, this), activeTab === 'url' && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"form-group\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: \"url-input\",\n              children: \"URL to verify\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 182,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"url\",\n              id: \"url-input\",\n              value: urlInput,\n              onChange: e => setUrlInput(e.target.value),\n              placeholder: \"https://example.com/article\",\n              required: true\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 183,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"form-hint\",\n              children: \"Enter the URL of an article, image, or video to verify.\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 191,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 181,\n            columnNumber: 15\n          }, this), activeTab === 'file' && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"form-group\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: \"file-input\",\n              children: \"File(s) to verify\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 199,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"file-upload-container\",\n              children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"file\",\n                id: \"file-input\",\n                onChange: handleFileChange,\n                multiple: true,\n                accept: \"image/*,video/*,application/pdf\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 201,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"file-upload-label\",\n                children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                  children: \"Drop your files here or click to browse\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 209,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"small\", {\n                  children: \"Accepted formats: images, videos, PDF\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 210,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 208,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 200,\n              columnNumber: 17\n            }, this), files.length > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"selected-files\",\n              children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n                children: \"Selected files:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 215,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n                children: files.map((file, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n                  children: [file.name, \" \", /*#__PURE__*/_jsxDEV(\"span\", {\n                    children: [\"(\", (file.size / 1024 / 1024).toFixed(2), \" MB)\"]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 219,\n                    columnNumber: 39\n                  }, this)]\n                }, index, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 218,\n                  columnNumber: 25\n                }, this))\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 216,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 214,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 198,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"form-actions\",\n            children: /*#__PURE__*/_jsxDEV(\"button\", {\n              type: \"submit\",\n              className: \"btn btn-primary\",\n              disabled: isLoading,\n              children: isLoading ? 'Verifying...' : 'Verify now'\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 229,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 228,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 165,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"verification-info\",\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            children: \"How does our verification system work?\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 240,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"Our platform uses multimodal artificial intelligence agents to analyze content from different perspectives:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 241,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n            children: [/*#__PURE__*/_jsxDEV(\"li\", {\n              children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                children: \"Text analysis:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 246,\n                columnNumber: 17\n              }, this), \" Detects inconsistencies, biases, and non-factual claims\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 245,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n              children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                children: \"Visual analysis:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 249,\n                columnNumber: 17\n              }, this), \" Identifies image manipulations and deepfakes\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 248,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n              children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                children: \"Contextual analysis:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 252,\n                columnNumber: 17\n              }, this), \" Assesses the reliability of sources and the general context\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 251,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 244,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"The results of the analysis are certified on the blockchain to ensure their transparency and immutability.\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 255,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 239,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 132,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 131,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 130,\n    columnNumber: 5\n  }, this);\n};\n_s(VerificationPage, \"RWmqNR4i4WnpaRxVOkPkQYRhmNs=\", false, function () {\n  return [useNavigate];\n});\n_c = VerificationPage;\nexport default VerificationPage;\nvar _c;\n$RefreshReg$(_c, \"VerificationPage\");","map":{"version":3,"names":["React","useState","useEffect","useNavigate","jsxDEV","_jsxDEV","VerificationPage","_s","navigate","activeTab","setActiveTab","isLoading","setIsLoading","error","setError","textInput","setTextInput","urlInput","setUrlInput","files","setFiles","user","localStorage","getItem","state","from","message","handleSubmit","e","preventDefault","trim","length","formData","FormData","newNews","now","Date","dateStr","toLocaleDateString","append","id","Math","random","toString","substr","title","slice","description","date","status","link","imageUrl","sources","_files$","i","name","map","f","join","pending","JSON","parse","window","push","setItem","stringify","setTimeout","verificationId","err","handleFileChange","Array","target","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","onSubmit","htmlFor","value","onChange","placeholder","rows","required","type","multiple","accept","file","index","size","toFixed","disabled","_c","$RefreshReg$"],"sources":["C:/Users/biabk/FINAL-FAKE-NEWS-CHECKER/CrippleFN/frontend/src/pages/VerificationPage.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport './VerificationPage.css';\r\n\r\nconst VerificationPage = () => {\r\n  const navigate = useNavigate();\r\n  const [activeTab, setActiveTab] = useState('text');\r\n  const [isLoading, setIsLoading] = useState(false);\r\n  const [error, setError] = useState('');\r\n\r\n  // States for the different forms\r\n  const [textInput, setTextInput] = useState('');\r\n  const [urlInput, setUrlInput] = useState('');\r\n  const [files, setFiles] = useState([]);\r\n\r\n  // User authentication check\r\n  useEffect(() => {\r\n    const user = localStorage.getItem('cripplefn_user');\r\n    if (!user) {\r\n      // Redirect to login if not authenticated\r\n      navigate('/login', { state: { from: '/verify', message: \"You must be logged in to verify content.\" } });\r\n    }\r\n  }, [navigate]);\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n    setError('');\r\n\r\n    // Check if data is entered\r\n    if (activeTab === 'text' && !textInput.trim()) {\r\n      setError('Please enter text to verify.');\r\n      return;\r\n    }\r\n\r\n    if (activeTab === 'url' && !urlInput.trim()) {\r\n      setError('Please enter a URL to verify.');\r\n      return;\r\n    }\r\n\r\n    if (activeTab === 'file' && files.length === 0) {\r\n      setError('Please select at least one file to verify.');\r\n      return;\r\n    }\r\n\r\n    setIsLoading(true);\r\n\r\n    try {\r\n      // Prepare data to send\r\n      const formData = new FormData();\r\n      let newNews = null;\r\n      const now = new Date();\r\n      const dateStr = now.toLocaleDateString('en-US');\r\n      if (activeTab === 'text') {\r\n        formData.append('text', textInput);\r\n        newNews = {\r\n          id: 'n_' + Math.random().toString(36).substr(2, 9),\r\n          title: textInput.slice(0, 60) + (textInput.length > 60 ? '...' : ''),\r\n          description: textInput,\r\n          date: dateStr,\r\n          status: 'pending',\r\n          link: '',\r\n          imageUrl: '/assets/fake-news-example.jpg',\r\n          sources: [],\r\n        };\r\n      } else if (activeTab === 'url') {\r\n        formData.append('urls', urlInput);\r\n        newNews = {\r\n          id: 'n_' + Math.random().toString(36).substr(2, 9),\r\n          title: urlInput,\r\n          description: urlInput,\r\n          date: dateStr,\r\n          status: 'pending',\r\n          link: urlInput,\r\n          imageUrl: '/assets/fake-news-example.jpg',\r\n          sources: [],\r\n        };\r\n      } else if (activeTab === 'file') {\r\n        for (let i = 0; i < files.length; i++) {\r\n          formData.append('files', files[i]);\r\n        }\r\n        newNews = {\r\n          id: 'n_' + Math.random().toString(36).substr(2, 9),\r\n          title: files[0]?.name || 'File',\r\n          description: files.map(f => f.name).join(', '),\r\n          date: dateStr,\r\n          status: 'pending',\r\n          link: '',\r\n          imageUrl: '/assets/fake-news-example.jpg',\r\n          sources: [],\r\n        };\r\n      }\r\n      // Add to localStorage (pendingNews)\r\n      if (newNews) {\r\n        const pending = JSON.parse(window.localStorage.getItem('pendingNews') || '[]');\r\n        pending.push(newNews);\r\n        window.localStorage.setItem('pendingNews', JSON.stringify(pending));\r\n      }\r\n\r\n      // Simulate API call (replace with real call)\r\n      setTimeout(() => {\r\n        // Simulate a response with a verification ID\r\n        const verificationId = 'ver_' + Math.random().toString(36).substr(2, 9);\r\n        // Redirect to dashboard to process the news\r\n        navigate(`/dashboard`);\r\n        setIsLoading(false);\r\n      }, 2000);\r\n      // Real API call (uncomment to use)\r\n      /*\r\n      const response = await fetch('http://localhost:8000/verification', {\r\n        method: 'POST',\r\n        body: formData,\r\n      });\r\n      if (!response.ok) {\r\n        throw new Error('Error submitting verification');\r\n      }\r\n      const data = await response.json();\r\n      navigate(`/results/${data.id}`);\r\n      */\r\n    } catch (err) {\r\n      setError(err.message || 'An error occurred. Please try again.');\r\n      setIsLoading(false);\r\n    }\r\n  };\r\n\r\n  const handleFileChange = (e) => {\r\n    setFiles(Array.from(e.target.files));\r\n  };\r\n\r\n  return (\r\n    <div className=\"verification-page\">\r\n      <div className=\"container\">\r\n        <div className=\"verification-container\">\r\n          <h1>Verify Content</h1>\r\n          <p className=\"verification-description\">\r\n            Submit text, a URL, or a file to verify its authenticity and detect possible manipulations.\r\n          </p>\r\n\r\n          <div className=\"verification-tabs\">\r\n            <button \r\n              className={`tab ${activeTab === 'text' ? 'active' : ''}`}\r\n              onClick={() => setActiveTab('text')}\r\n            >\r\n              Text\r\n            </button>\r\n            <button \r\n              className={`tab ${activeTab === 'url' ? 'active' : ''}`}\r\n              onClick={() => setActiveTab('url')}\r\n            >\r\n              URL\r\n            </button>\r\n            <button \r\n              className={`tab ${activeTab === 'file' ? 'active' : ''}`}\r\n              onClick={() => setActiveTab('file')}\r\n            >\r\n              File\r\n            </button>\r\n          </div>\r\n\r\n          {error && (\r\n            <div className=\"alert alert-error\">\r\n              {error}\r\n            </div>\r\n          )}\r\n\r\n          <form onSubmit={handleSubmit}>\r\n            {activeTab === 'text' && (\r\n              <div className=\"form-group\">\r\n                <label htmlFor=\"text-input\">Text to verify</label>\r\n                <textarea\r\n                  id=\"text-input\"\r\n                  value={textInput}\r\n                  onChange={(e) => setTextInput(e.target.value)}\r\n                  placeholder=\"Paste here the text you want to verify...\"\r\n                  rows={10}\r\n                  required\r\n                />\r\n              </div>\r\n            )}\r\n\r\n            {activeTab === 'url' && (\r\n              <div className=\"form-group\">\r\n                <label htmlFor=\"url-input\">URL to verify</label>\r\n                <input\r\n                  type=\"url\"\r\n                  id=\"url-input\"\r\n                  value={urlInput}\r\n                  onChange={(e) => setUrlInput(e.target.value)}\r\n                  placeholder=\"https://example.com/article\"\r\n                  required\r\n                />\r\n                <div className=\"form-hint\">\r\n                  Enter the URL of an article, image, or video to verify.\r\n                </div>\r\n              </div>\r\n            )}\r\n\r\n            {activeTab === 'file' && (\r\n              <div className=\"form-group\">\r\n                <label htmlFor=\"file-input\">File(s) to verify</label>\r\n                <div className=\"file-upload-container\">\r\n                  <input\r\n                    type=\"file\"\r\n                    id=\"file-input\"\r\n                    onChange={handleFileChange}\r\n                    multiple\r\n                    accept=\"image/*,video/*,application/pdf\"\r\n                  />\r\n                  <div className=\"file-upload-label\">\r\n                    <span>Drop your files here or click to browse</span>\r\n                    <small>Accepted formats: images, videos, PDF</small>\r\n                  </div>\r\n                </div>\r\n                {files.length > 0 && (\r\n                  <div className=\"selected-files\">\r\n                    <h4>Selected files:</h4>\r\n                    <ul>\r\n                      {files.map((file, index) => (\r\n                        <li key={index}>\r\n                          {file.name} <span>({(file.size / 1024 / 1024).toFixed(2)} MB)</span>\r\n                        </li>\r\n                      ))}\r\n                    </ul>\r\n                  </div>\r\n                )}\r\n              </div>\r\n            )}\r\n\r\n            <div className=\"form-actions\">\r\n              <button \r\n                type=\"submit\" \r\n                className=\"btn btn-primary\" \r\n                disabled={isLoading}\r\n              >\r\n                {isLoading ? 'Verifying...' : 'Verify now'}\r\n              </button>\r\n            </div>\r\n          </form>\r\n\r\n          <div className=\"verification-info\">\r\n            <h3>How does our verification system work?</h3>\r\n            <p>\r\n              Our platform uses multimodal artificial intelligence agents to analyze content from different perspectives:\r\n            </p>\r\n            <ul>\r\n              <li>\r\n                <strong>Text analysis:</strong> Detects inconsistencies, biases, and non-factual claims\r\n              </li>\r\n              <li>\r\n                <strong>Visual analysis:</strong> Identifies image manipulations and deepfakes\r\n              </li>\r\n              <li>\r\n                <strong>Contextual analysis:</strong> Assesses the reliability of sources and the general context\r\n              </li>\r\n            </ul>\r\n            <p>\r\n              The results of the analysis are certified on the blockchain to ensure their transparency and immutability.\r\n            </p>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default VerificationPage;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}